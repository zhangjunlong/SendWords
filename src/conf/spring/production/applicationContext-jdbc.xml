<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

	<!--
		<bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean"> <property
		name="jndiName" value="java:comp/env/jdbc/woms" /> </bean>
	-->

	<jee:jndi-lookup id="jdbcDataSource" jndi-name="jdbc/woms" />

	<!-- JDBC Template -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="jdbcDataSource" />
	</bean>

	<!-- 
	<bean id="JdbcTxManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource ">
			<ref bean="jdbcDataSource" />
		</property>
	</bean>
	 -->
	<!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	-->
	<!-- 
	<tx:annotation-driven />
	 -->

	<!--
		PostProcessors to perform exception translation on @Repository classes
		(from native exceptions such as JPA PersistenceExceptions to Spring's
		DataAccessException hierarchy).
	-->
	<!--
		<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
		/>
	-->

	<!--
		Will automatically be transactional due to @Transactional.
		EntityManager will be auto-injected due to @PersistenceContext.
		PersistenceExceptions will be auto-translated due to @Repository.
	-->

	<!-- 
	<aop:config>
		<aop:pointcut id="jdbcServiceOperation"
			expression="execution(* com.openthinks.woms..service..*Service.*(..))" />
		<aop:advisor pointcut-ref="jdbcServiceOperation" advice-ref="jdbcTxAdvice" />
	</aop:config>
	 -->

	<!--
		the transactional advice (i.e. what 'happens'; see the <aop:advisor/>
		bean below)
	-->
	<!-- 
	<tx:advice id="jdbcTxAdvice">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	 -->

</beans>

